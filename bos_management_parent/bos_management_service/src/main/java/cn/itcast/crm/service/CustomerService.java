
package cn.itcast.crm.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CustomerService", targetNamespace = "http://service.crm.itcast.cn/")
@XmlSeeAlso({
//    ObjectFactory.class
})
public interface CustomerService {


    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "assignCustomers2FixedArea", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.AssignCustomers2FixedArea")
    @ResponseWrapper(localName = "assignCustomers2FixedAreaResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.AssignCustomers2FixedAreaResponse")
    public void assignCustomers2FixedArea(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<Integer> arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns cn.itcast.crm.service.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByType", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindByType")
    @ResponseWrapper(localName = "findByTypeResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindByTypeResponse")
    public Customer findByType(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns cn.itcast.crm.service.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.LoginResponse")
    public Customer login(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validateTel", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.ValidateTel")
    @ResponseWrapper(localName = "validateTelResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.ValidateTelResponse")
    public Boolean validateTel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "activeAccount", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.ActiveAccount")
    @ResponseWrapper(localName = "activeAccountResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.ActiveAccountResponse")
    public void activeAccount(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @return
     *     returns java.util.List<cn.itcast.crm.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findNotAssociation", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindNotAssociation")
    @ResponseWrapper(localName = "findNotAssociationResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindNotAssociationResponse")
    public List<Customer> findNotAssociation();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findFixedAreaIdByAddress", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindFixedAreaIdByAddress")
    @ResponseWrapper(localName = "findFixedAreaIdByAddressResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindFixedAreaIdByAddressResponse")
    public String findFixedAreaIdByAddress(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<cn.itcast.crm.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindAllResponse")
    public List<Customer> findAll();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<cn.itcast.crm.service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findHasAssociation", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindHasAssociation")
    @ResponseWrapper(localName = "findHasAssociationResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.FindHasAssociationResponse")
    public List<Customer> findHasAssociation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "regist", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.Regist")
    @ResponseWrapper(localName = "registResponse", targetNamespace = "http://service.crm.itcast.cn/", className = "cn.itcast.crm.service.RegistResponse")
    public void regist(
        @WebParam(name = "arg0", targetNamespace = "")
        Customer arg0);

}
